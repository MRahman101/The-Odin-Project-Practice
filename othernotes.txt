Inspect element tool: You can use the "Inspect" element tool to inspect the HTML and CSS makeup of a website. 
And in that mode, you can choose the option to "select an element to inspect" to click and find out things about a element. 
Any style that is struck through is overwritten. 
You can select and edit the elements of the page through the Devtools for testing purposes without altering the original. 

The Box Model: 
This is used to understand that every element has a certain amount of space (in the form of a box) that is used to manipulate the orientation and position of an alement in a webpage. 
[The part of showing the box method is in another repl: Odin Project (random test)]
Padding is empty space placed in between the box and its content, margin is the space between the edge of a box and border adds space between margin and padding.  

Block and Inline: Most of the learned elements are block elements. Inline elements appear in line with whatever elements are placed beside it (and not taking/starting a line). Padding and margin behave differently under inline elements.  Inline-block elements are a bit of both. Divs and spans ahve no aprtiuclar purpose and can be used for anything. This useful in providing elements that are not like other elements. Divs are block-level elements (default) and spans are inline-level elements (default). 

Intro to Flexbox: It helps to position elements. It is a way to arrange items into rows and columns where items flex an shrink. 
[The part of showing flexboxes is in another repl: Odin Project (random test) and in my own Codepen account.]

GROWING AND SHRINKING: 
The flex declaration is a shorthand property(let's you see the value of other CSS properties simultaneously) for flex-grow, flex-shrink and flex-basis. 
It is written as :
.flex-container .two {
  flex: 2 1 0%;
}
Where the 1st # is grow, 2nd is the shrink and 3rd is the basis(sets the initial size of a flex item). 

Axes:
This will determine the rules of flexbox in the direction of a row or a column. 
It is written like:
.flex-container {
  flex-direction: column;
}
This specifies that the flex container flexes on the column. 

